/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: devteroflex.proto */

#ifndef PROTOBUF_C_devteroflex_2eproto__INCLUDED
#define PROTOBUF_C_devteroflex_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003003 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _DevteroflexArchStateP DevteroflexArchStateP;
typedef struct _DevteroflexCommitTraceP DevteroflexCommitTraceP;


/* --- enums --- */


/* --- messages --- */

struct  _DevteroflexArchStateP
{
  ProtobufCMessage base;
  size_t n_xregs;
  uint64_t *xregs;
  uint64_t pc;
  uint64_t sp;
  uint32_t nzcv;
};
#define DEVTEROFLEX_ARCH_STATE_P__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&devteroflex_arch_state_p__descriptor) \
    , 0,NULL, 0, 0, 0 }


struct  _DevteroflexCommitTraceP
{
  ProtobufCMessage base;
  DevteroflexArchStateP *state;
  uint32_t inst;
  size_t n_mem_addr;
  uint64_t *mem_addr;
  size_t n_mem_data;
  uint64_t *mem_data;
  ProtobufCBinaryData inst_block_data;
  size_t n_mem_block_data;
  ProtobufCBinaryData *mem_block_data;
};
#define DEVTEROFLEX_COMMIT_TRACE_P__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&devteroflex_commit_trace_p__descriptor) \
    , NULL, 0, 0,NULL, 0,NULL, {0,NULL}, 0,NULL }


/* DevteroflexArchStateP methods */
void   devteroflex_arch_state_p__init
                     (DevteroflexArchStateP         *message);
size_t devteroflex_arch_state_p__get_packed_size
                     (const DevteroflexArchStateP   *message);
size_t devteroflex_arch_state_p__pack
                     (const DevteroflexArchStateP   *message,
                      uint8_t             *out);
size_t devteroflex_arch_state_p__pack_to_buffer
                     (const DevteroflexArchStateP   *message,
                      ProtobufCBuffer     *buffer);
DevteroflexArchStateP *
       devteroflex_arch_state_p__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   devteroflex_arch_state_p__free_unpacked
                     (DevteroflexArchStateP *message,
                      ProtobufCAllocator *allocator);
/* DevteroflexCommitTraceP methods */
void   devteroflex_commit_trace_p__init
                     (DevteroflexCommitTraceP         *message);
size_t devteroflex_commit_trace_p__get_packed_size
                     (const DevteroflexCommitTraceP   *message);
size_t devteroflex_commit_trace_p__pack
                     (const DevteroflexCommitTraceP   *message,
                      uint8_t             *out);
size_t devteroflex_commit_trace_p__pack_to_buffer
                     (const DevteroflexCommitTraceP   *message,
                      ProtobufCBuffer     *buffer);
DevteroflexCommitTraceP *
       devteroflex_commit_trace_p__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   devteroflex_commit_trace_p__free_unpacked
                     (DevteroflexCommitTraceP *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*DevteroflexArchStateP_Closure)
                 (const DevteroflexArchStateP *message,
                  void *closure_data);
typedef void (*DevteroflexCommitTraceP_Closure)
                 (const DevteroflexCommitTraceP *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor devteroflex_arch_state_p__descriptor;
extern const ProtobufCMessageDescriptor devteroflex_commit_trace_p__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_devteroflex_2eproto__INCLUDED */
